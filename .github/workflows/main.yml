
name: Java CI with Maven

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: "40 12 * * *" 
  workflow_dispatch:
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - uses: actions/upload-artifact@v3
      with:
        name: Package
        path: target/*.war
        
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
       username: ${{ secrets.DOCKERHUB_USERNAME }}
       password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        push: true
        context: .
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/planview:latest
    - name: build image 
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/planview:latest .
    - name: push image 
      run: docker push  ${{ secrets.DOCKERHUB_USERNAME }}/planview:latest
    
    - name: Deploy appplication ussing SSH
      uses: cross-the-world/ssh-scp-ssh-pipelines@latest
      env:
          WELCOME: "ssh scp ssh pipelines"
          LASTSSH: "Doing something after copying"
      with:
          host: 'giovannisorrentsl0034.simplilearnlabs.com:'
          user: 'guacadmin'
          pass: 'guacadmin'
          port: 42001
          connect_timeout: 10s
          first_ssh: |
            rm -rf /home/github/test
            ls -la  \necho $WELCOME 
            mkdir -p /home/github/test/test1 && 
            mkdir -p /home/github/test/test2 &&
          scp: |
            './test/*' => /home/github/test/
            ./test/test1* => /home/github/test/test1/
            ./test/test*.csv => "/home/github/test/test2/"
          last_ssh: |
            echo $LASTSSH && 
            (mkdir test1/test || true)
            || ls -la

          
  deploy_prod:
    if: github.ref == 'refs/heads/master' 
    runs-on: ubuntu-latest
    needs: build
    steps:
     - name: Deployment
       run: |
            ls -ltr; pwd
  deploy_dev:
    if: github.ref == 'refs/heads/master' 
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deployment
      run: |
            ls -ltr; pwd
